{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Sarvesh/Downloads/first-app_01-hello-world/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let HousingService = /*#__PURE__*/(() => {\n  class HousingService {\n    constructor() {\n      this.url = 'http://localhost:3000/locations';\n    }\n    getAllHousingLocations() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const data = yield fetch(_this.url);\n        return (yield data.json()) ?? [];\n      })();\n    }\n    getHousingLocationById(id) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const data = yield fetch(`${_this2.url}?id=${id}`);\n        const locationJson = yield data.json();\n        return locationJson[0] ?? {};\n      })();\n    }\n    submitApplication(firstName, lastName, email) {\n      // tslint:disable-next-line\n      console.log(firstName, lastName, email);\n    }\n    static #_ = this.ɵfac = function HousingService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HousingService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HousingService,\n      factory: HousingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return HousingService;\n})();","map":{"version":3,"names":["HousingService","constructor","url","getAllHousingLocations","_this","_asyncToGenerator","data","fetch","json","getHousingLocationById","id","_this2","locationJson","submitApplication","firstName","lastName","email","console","log","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Sarvesh\\Downloads\\first-app_01-hello-world\\src\\app\\housing.ts"],"sourcesContent":["// import {Injectable} from '@angular/core';\r\n// import {HousingLocationInfo} from './housinglocationinfo';\r\n// @Injectable({\r\n//   providedIn: 'root',\r\n// })\r\n// export class HousingService {\r\n//   readonly baseUrl = 'https://angular.dev/assets/images/tutorials/common';\r\n//   protected housingLocationList: HousingLocationInfo[] = [\r\n//     {\r\n//       id: 0,\r\n//       name: 'Acme Fresh Start Housing',\r\n//       city: 'Chicago',\r\n//       state: 'IL',\r\n//       photo: `${this.baseUrl}/bernard-hermant-CLKGGwIBTaY-unsplash.jpg`,\r\n//       availableUnits: 4,\r\n//       wifi: true,\r\n//       laundry: true,\r\n//     },\r\n//     {\r\n//       id: 1,\r\n//       name: 'A113 Transitional Housing',\r\n//       city: 'Santa Monica',\r\n//       state: 'CA',\r\n//       photo: `${this.baseUrl}/brandon-griggs-wR11KBaB86U-unsplash.jpg`,\r\n//       availableUnits: 0,\r\n//       wifi: false,\r\n//       laundry: true,\r\n//     },\r\n//     {\r\n//       id: 2,\r\n//       name: 'Warm Beds Housing Support',\r\n//       city: 'Juneau',\r\n//       state: 'AK',\r\n//       photo: `${this.baseUrl}/i-do-nothing-but-love-lAyXdl1-Wmc-unsplash.jpg`,\r\n//       availableUnits: 1,\r\n//       wifi: false,\r\n//       laundry: false,\r\n//     },\r\n//     {\r\n//       id: 3,\r\n//       name: 'Homesteady Housing',\r\n//       city: 'Chicago',\r\n//       state: 'IL',\r\n//       photo: `${this.baseUrl}/ian-macdonald-W8z6aiwfi1E-unsplash.jpg`,\r\n//       availableUnits: 1,\r\n//       wifi: true,\r\n//       laundry: false,\r\n//     },\r\n//     {\r\n//       id: 4,\r\n//       name: 'Happy Homes Group',\r\n//       city: 'Gary',\r\n//       state: 'IN',\r\n//       photo: `${this.baseUrl}/krzysztof-hepner-978RAXoXnH4-unsplash.jpg`,\r\n//       availableUnits: 1,\r\n//       wifi: true,\r\n//       laundry: false,\r\n//     },\r\n//     {\r\n//       id: 5,\r\n//       name: 'Hopeful Apartment Group',\r\n//       city: 'Oakland',\r\n//       state: 'CA',\r\n//       photo: `${this.baseUrl}/r-architecture-JvQ0Q5IkeMM-unsplash.jpg`,\r\n//       availableUnits: 2,\r\n//       wifi: true,\r\n//       laundry: true,\r\n//     },\r\n//     {\r\n//       id: 6,\r\n//       name: 'Seriously Safe Towns',\r\n//       city: 'Oakland',\r\n//       state: 'CA',\r\n//       photo: `${this.baseUrl}/phil-hearing-IYfp2Ixe9nM-unsplash.jpg`,\r\n//       availableUnits: 5,\r\n//       wifi: true,\r\n//       laundry: true,\r\n//     },\r\n//     {\r\n//       id: 7,\r\n//       name: 'Hopeful Housing Solutions',\r\n//       city: 'Oakland',\r\n//       state: 'CA',\r\n//       photo: `${this.baseUrl}/r-architecture-GGupkreKwxA-unsplash.jpg`,\r\n//       availableUnits: 2,\r\n//       wifi: true,\r\n//       laundry: true,\r\n//     },\r\n//     {\r\n//       id: 8,\r\n//       name: 'Seriously Safe Towns',\r\n//       city: 'Oakland',\r\n//       state: 'CA',\r\n//       photo: `${this.baseUrl}/saru-robert-9rP3mxf8qWI-unsplash.jpg`,\r\n//       availableUnits: 10,\r\n//       wifi: false,\r\n//       laundry: false,\r\n//     },\r\n//     {\r\n//       id: 9,\r\n//       name: 'Capital Safe Towns',\r\n//       city: 'Portland',\r\n//       state: 'OR',\r\n//       photo: `${this.baseUrl}/webaliser-_TPTXZd9mOo-unsplash.jpg`,\r\n//       availableUnits: 6,\r\n//       wifi: true,\r\n//       laundry: true,\r\n//     },\r\n//   ];\r\n//   getAllHousingLocations(): HousingLocationInfo[] {\r\n//     return this.housingLocationList;\r\n//   }\r\n//   getHousingLocationById(id: number): HousingLocationInfo | undefined {\r\n//     return this.housingLocationList.find((housingLocation) => housingLocation.id === id);\r\n//   }\r\n//   submitApplication(firstName: string, lastName: string, email: string) {\r\n//     console.log(\r\n//       `Homes application received: firstName: ${firstName}, lastName: ${lastName}, email: ${email}.`,\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {HousingLocationInfo} from './housinglocationinfo';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HousingService {\r\n  url = 'http://localhost:3000/locations';\r\n  async getAllHousingLocations(): Promise<HousingLocationInfo[]> {\r\n    const data = await fetch(this.url);\r\n    return (await data.json()) ?? [];\r\n  }\r\n  async getHousingLocationById(id: number): Promise<HousingLocationInfo | undefined> {\r\n    const data = await fetch(`${this.url}?id=${id}`);\r\n    const locationJson = await data.json();\r\n    return locationJson[0] ?? {};\r\n  }\r\n  submitApplication(firstName: string, lastName: string, email: string) {\r\n    // tslint:disable-next-line\r\n    console.log(firstName, lastName, email);\r\n  }\r\n}"],"mappings":";;AA+HA,WAAaA,cAAc;EAArB,MAAOA,cAAc;IAH3BC,YAAA;MAIE,KAAAC,GAAG,GAAG,iCAAiC;;IACjCC,sBAAsBA,CAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QAC1B,MAAMC,IAAI,SAASC,KAAK,CAACH,KAAI,CAACF,GAAG,CAAC;QAClC,OAAO,OAAOI,IAAI,CAACE,IAAI,EAAE,KAAK,EAAE;MAAC;IACnC;IACMC,sBAAsBA,CAACC,EAAU;MAAA,IAAAC,MAAA;MAAA,OAAAN,iBAAA;QACrC,MAAMC,IAAI,SAASC,KAAK,CAAC,GAAGI,MAAI,CAACT,GAAG,OAAOQ,EAAE,EAAE,CAAC;QAChD,MAAME,YAAY,SAASN,IAAI,CAACE,IAAI,EAAE;QACtC,OAAOI,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE;MAAC;IAC/B;IACAC,iBAAiBA,CAACC,SAAiB,EAAEC,QAAgB,EAAEC,KAAa;MAClE;MACAC,OAAO,CAACC,GAAG,CAACJ,SAAS,EAAEC,QAAQ,EAAEC,KAAK,CAAC;IACzC;IAAC,QAAAG,CAAA,G;uCAdUnB,cAAc;IAAA;IAAA,QAAAoB,EAAA,G;aAAdpB,cAAc;MAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;MAAAC,UAAA,EAFb;IAAM;;SAEPvB,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}